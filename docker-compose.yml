# docker compose up -d --build --force-recreate
version: '3.8'
name: store

services:

  # db:
  #   image: postgres:latest    

  discovery:
    container_name: store-discovery
    build:
      context: ../sb232.store.discovery/
      dockerfile: Dockerfile
    image: store-discovery:latest
    ports:
      - 8761:8761
    restart: always
    networks:
      - store-network
    # depends_on:
    #   - db

  gateway:
    container_name: store-gateway
    build:
      context: ../sb232.store.gateway/
      dockerfile: Dockerfile
    image: store-gateway:latest
    environment:
      - eureka.client.serviceUrl.defaultZone=http://store-discovery:8761/eureka/
    ports:
      - 8080:8080
    restart: always
    networks:
      - store-network
    depends_on:
      - discovery

  auth:
    # container_name: store-auth
    build:
      context: ../sb232.store.auth/
      dockerfile: Dockerfile
    image: store-auth:latest
    environment:
      - eureka.client.serviceUrl.defaultZone=http://store-discovery:8761/eureka/
    networks:
      - store-network
    depends_on:
      - gateway
    deploy:
      mode: replicated
      replicas: 2

  product:
    # container_name: store-product
    build:
      context: ../sb232.store.product/
      dockerfile: Dockerfile
    image: store-product:latest
    environment:
      - eureka.client.serviceUrl.defaultZone=http://store-discovery:8761/eureka/
      - spring.datasource.url=jdbc:postgresql://host.docker.internal:5432/poo
    networks:
      - store-network
    depends_on:
      - gateway

  customer:
    # container_name: store-customer
    build:
      context: ../sb232.store.customer/
      dockerfile: Dockerfile
    image: store-customer:latest
    environment:
      - eureka.client.serviceUrl.defaultZone=http://store-discovery:8761/eureka/
      - spring.datasource.url=jdbc:postgresql://host.docker.internal:5432/poo
    networks:
      - store-network
    depends_on:
      - gateway

networks:
  store-network:
    driver: bridge
